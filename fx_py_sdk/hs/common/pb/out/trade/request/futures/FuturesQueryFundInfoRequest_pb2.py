# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: trade/request/futures/FuturesQueryFundInfoRequest.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='trade/request/futures/FuturesQueryFundInfoRequest.proto',
  package='',
  syntax='proto3',
  serialized_options=b'\n:com.huasheng.quant.open.sdk.protobuf.trade.request.futuresB FuturesQueryFundInfoRequestProto',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n7trade/request/futures/FuturesQueryFundInfoRequest.proto\"\x1d\n\x1b\x46uturesQueryFundInfoRequestB^\n:com.huasheng.quant.open.sdk.protobuf.trade.request.futuresB FuturesQueryFundInfoRequestProtob\x06proto3'
)




_FUTURESQUERYFUNDINFOREQUEST = _descriptor.Descriptor(
  name='FuturesQueryFundInfoRequest',
  full_name='FuturesQueryFundInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=88,
)

DESCRIPTOR.message_types_by_name['FuturesQueryFundInfoRequest'] = _FUTURESQUERYFUNDINFOREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FuturesQueryFundInfoRequest = _reflection.GeneratedProtocolMessageType('FuturesQueryFundInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _FUTURESQUERYFUNDINFOREQUEST,
  '__module__' : 'trade.request.futures.FuturesQueryFundInfoRequest_pb2'
  # @@protoc_insertion_point(class_scope:FuturesQueryFundInfoRequest)
  })
_sym_db.RegisterMessage(FuturesQueryFundInfoRequest)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
